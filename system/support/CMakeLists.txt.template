cmake_minimum_required(VERSION 3.8.2)
set(_ignore_warning ${ARDUINO_BUILD_PATH})
set(_ignore_warning ${ARDUINO_VARIANT_PATH})

set(ZEPHYR_MODULE_BASE_PATH $ENV{ZEPHYR_BASE}/../modules)
set(ZEPHYR_MODULES $ENV{ZEPHYR_BASE}/../../
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/atmel
                   ${ZEPHYR_MODULE_BASE_PATH}/lib/civetweb
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/esp-idf
                   ${ZEPHYR_MODULE_BASE_PATH}/fs/fatfs
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/cypress
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/nordic
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/openisa
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/microchip
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/silabs
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/st
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/stm32
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/ti
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/libmetal
                   ${ZEPHYR_MODULE_BASE_PATH}/lib/gui/lvgl
                   ${ZEPHYR_MODULE_BASE_PATH}/crypto/mbedtls
                   ${ZEPHYR_MODULE_BASE_PATH}/lib/mcumgr
                   ${ZEPHYR_MODULE_BASE_PATH}/fs/nffs
                   ${ZEPHYR_MODULE_BASE_PATH}/hal/nxp
                   ${ZEPHYR_MODULE_BASE_PATH}/lib/open-amp
                   ${ZEPHYR_MODULE_BASE_PATH}/lib/openthread
                   ${ZEPHYR_MODULE_BASE_PATH}/debug/segger
                   ${ZEPHYR_MODULE_BASE_PATH}/lib/tinycbor
                   ${ZEPHYR_MODULE_BASE_PATH}/fs/littlefs
                   ${ZEPHYR_MODULE_BASE_PATH}/debug/mipi-sys-t
)

include($ENV{ZEPHYR_BASE}/cmake/app/boilerplate.cmake NO_POLICY_SCOPE)
project(NONE)

target_sources(app PRIVATE ### <<<ARDUINO_PREPROC_MACROS_SOURCE>>> ###)
target_sources(app PRIVATE ### <<<ARDUINO_CORES_SRCS>>> ### )
target_sources(app PRIVATE ### <<<ARDUINO_VARIANT_SRCS>>> ### )
target_sources(app PRIVATE ### <<<ARDUINO_LIBRARIES_SRCS>>> ### )
target_sources(app PRIVATE ### <<<ARDUINO_SKETCH_SRCS>>> ### )

zephyr_compile_definitions(### <<<ARDUINO_PREPROC_MACROS_DEFINE_MACROS>>> ###)

target_include_directories(zephyr_interface BEFORE INTERFACE $ENV{ZEPHYR_BASE})

target_include_directories(zephyr_interface BEFORE INTERFACE ### <<<ARDUINO_PREPROC_MACROS_INCLUDE_DIRS>>> ###)
include_directories( ### <<<ARDUINO_INCLUDE_DIRS>>> ### )
link_directories( ### <<<ARDUINO_LIBRARY_DIRS>>> ### )
add_definitions( ### <<<ARDUINO_DEFINE_MACROS>>> ### )

zephyr_compile_options(-nostdinc)

foreach(dep IN ITEMS ${ARDUINO_EXTRA_DEPENDENCIES})
  add_dependencies(app ${dep})
endforeach()

file(GENERATE OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/preproc$<$<COMPILE_LANGUAGE:C>:.c>$<$<COMPILE_LANGUAGE:ASM>:.asm>$<$<COMPILE_LANGUAGE:CXX>:.cpp>.sh
	CONTENT
"#! /bin/sh
${CMAKE_CXX_COMPILER} ${CMAKE_CXX_FLAGS} -D$<JOIN:$<TARGET_PROPERTY:app,COMPILE_DEFINITIONS>, -D> -I$<JOIN:$<TARGET_PROPERTY:app,INTERFACE_INCLUDE_DIRECTORIES>, -I> -isystem $<JOIN:$<TARGET_PROPERTY:app,INTERFACE_SYSTEM_INCLUDE_DIRECTORIES>, -isystem > $<TARGET_PROPERTY:app,COMPILE_FLAGS> $<JOIN:$<TARGET_PROPERTY:app,COMPILE_OPTIONS>, > -w -x c++ -E -CC -c $1 -o $2")
